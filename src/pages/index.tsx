import { SignIn, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";
import { RouterOutputs, api } from "~/utils/api";
import { SignInButton} from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";


dayjs.extend(relativeTime)

const CreatePostWizard = () =>{
  const {user} = useUser();
  if(!user) return null;
  return (
    <div className="flex w-full gap-3"> <img src={user.profileImageUrl} 
    alt = "Profile image" 
    className="w-11 h-11 rounded-full"
    />
    <input placeholder="type something..." className = "bg-transparent text-slate-200"/>
    </div>
  );
}
const text = "hello";
type postWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: postWithUser) =>{
  const{post,author} = props;
  return(
    <div>
      <div key = {post.id} className="flex p-8 gap-3 w-full border-b border-blue-900">
      <img src={author?.profilePic} className="w-11 h-11 rounded-full"/>
      <div className= "flex flex-col">
        <div className="flex text-slate-200"><span> {`@${author.username}`}</span>
        <span className="flex text-center text-slate-400"> {`...${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
        </div></div>
    </div>
  );


}



export default function Home() {
  const {data, isLoading} = api.posts.getAll.useQuery();

  const user = useUser();
 
  if (isLoading) return <div>Loading...</div>
  if(!data) return <div>Oops! Something went wrong...</div>
  console.log(user);
  return (
    < >
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center bg-black ">
        <div className= "w-full border-x border-blue-9000 md:max-w-2xl">
        <div className = "border-blue-900 border-b p-8 flex text-slate-200"> 
            {user.isSignedIn && <CreatePostWizard/>}
            {!user.isSignedIn && <div className="flex justify-center"><SignInButton /></div>}
        </div>
        <div>
        {data.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
        ))}
        </div>
        </div> 
      </main>
    </>
  );
}
